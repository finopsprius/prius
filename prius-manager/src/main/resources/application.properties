# Copyright 2023 Javi Roman
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

quarkus.banner.path=banner.txt

#
# DB datasource (backend model persistence)
# Based on https://agroal.github.io
#
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRESQL_USER:priusdbuser}
quarkus.datasource.password=${POSTGRESQL_PWD:priusdbpasswd}
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRESQL_URL:localhost}:${POSTGRESQL_PORT:5432}/${DB_NAME:priusdb}

#
# FlyWay
# https://quarkus.io/guides/flyway
# https://flywaydb.org/
#
# We use Flyway to manage the database schema and static data at bootstrap, and
# for further database schema migrations. Flyway startup before Hibernate ORM.
#

# Quarkus will execute the Flyway migration as part of the application startup.
quarkus.flyway.migrate-at-start = true
quarkus.flyway.clean-at-start = true

#
# JWT Signatures: When your authentication server receives an incoming JWT,
# it uses the incoming JWT's header and payload segments and the shared private key
# to generate a signature. If the signature matches, then your application knows
# that the incoming JWT can be trusted. The signature helps ensure that the data
# in the header and payload segments haven't been tampered with, and the JWT can be trusted.
# However, it's important to note that the cryptographic signature at the end of the JWT
# is just for validation. It doesn't encrypt any data in the header or payload segments
# of the token. So you should never send sensitive information like a user's password in
# a JWT, everything in the header and payload can and should be public.
#

mp.jwt.verify.issuer=https://quarkus.io/guides/security-jwt
mp.jwt.verify.publickey.location=pubkey.pem
mp.jwt.decrypt.key.location=prikey.pem
smallrye.jwt.sign.key.location=${mp.jwt.decrypt.key.location}
smallrye.jwt.encrypt.key.location=${mp.jwt.verify.publickey.location}
smallrye.jwt.new-token.lifespan=86400
smallrye.jwt.expiration.grace=0
prius.pass-salt=salt1234salt1234

#
# OpenAPI for development environment
#

quarkus.resteasy-reactive.path=/api
quarkus.smallrye-openapi.info-title=Prius Platform Backend API (production)
quarkus.smallrye-openapi.info-version=0.0.1

#
# Logging Verbosity
#

# General logging verbosity:
quarkus.log.level=DEBUG
# SQL Hibernate verbosity:
#quarkus.hibernate-orm.log.sql=true
# JWT messages verbosity:
#quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE
#quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=TRACE
